name: Build and Deploy

on:
  workflow_dispatch: # This adds a manual trigger
  push:
    branches:
      - main
  pull_request:
    branches:
      - '*'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Set current date as env variable
        run: echo "DATE_NOW=$(date +'%Y-%m-%dT%H-%M-%S')" >> $GITHUB_ENV
      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: 'true'
          lfs: 'true'
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10.12'
      - name: Setup NodeJS
        uses: actions/setup-node@v4
        with:
          node-version: '18'
      - name: Build the JupyterLite with Extension(s)
        shell: bash
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # Configure git to use token for private repo access
          git config --global url."https://$GH_TOKEN@github.com/".insteadOf "https://github.com/"
          
          # TODO: Remove when done. DEBUG: Show installed packages before build
          echo "=== Python packages before build ==="
          python -m pip list | grep -i bridge || echo "No bridge extension found"
          echo "=== JupyterLab extensions before build ==="
          jupyter labextension list || echo "No labextensions found"
          # Run the build
          npm run build
          # DEBUG: Show installed packages after build
          echo "=== Python packages after build ==="
          python -m pip list | grep -i bridge || echo "No bridge extension found"
          echo "=== JupyterLab extensions after build ==="
          jupyter labextension list || echo "No labextensions found"
      - name: Upload pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./dist
      - name: Upload dist artifact
        uses: actions/upload-artifact@v4
        with:
          name: dist-${{ env.DATE_NOW }}
          path: ./dist

  deploy:
    needs: build
    if: github.ref == 'refs/heads/main'
    permissions:
      pages: write
      id-token: write

    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    runs-on: ubuntu-latest
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
